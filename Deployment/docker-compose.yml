version: '3.3'

services:

  gate:
    image: gate
    build:
      args:
        Version: "1"
      context: ../
      dockerfile: Services/Gate/dev.Dockerfile
    container_name: gate
    ports:
      - 6010:80
      - 5010:443
    volumes:
      - ~/.aspnet/https:/https:ro
    environment:
      - ASPNETCORE_ENVIRONMENT=docker
      - ASPNETCORE_URLS=https://+;http://+
      - ASPNETCORE_HTTPS_PORT=5010
      - ASPNETCORE_HTTP_PORT=6010
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx

  hotel_command:
    image: hotel_command
    build:
      args:
        Version: "1"
      context: ../
      dockerfile: Services/HotelCommand/dev.Dockerfile
    container_name: hotel_command
    ports:
      - 6010:80
      - 5010:443
    volumes:
      - ~/.aspnet/https:/https:ro
    environment:
      - ASPNETCORE_ENVIRONMENT=docker
      - ASPNETCORE_URLS=https://+;http://+
      - ASPNETCORE_HTTPS_PORT=5010
      - ASPNETCORE_HTTP_PORT=6010
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx

  hotel_query:
    image: hotel_query
    build:
      args:
        Version: "1"
      context: ../
      dockerfile: Services/HotelQuery/dev.Dockerfile
    container_name: hotel_query
    ports:
      - 6010:80
      - 5010:443
    volumes:
      - ~/.aspnet/https:/https:ro
    environment:
      - ASPNETCORE_ENVIRONMENT=docker
      - ASPNETCORE_URLS=https://+;http://+
      - ASPNETCORE_HTTPS_PORT=5010
      - ASPNETCORE_HTTP_PORT=6010
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx

  login:
    image: login
    build:
      args:
        Version: "1"
      context: ../
      dockerfile: Services/Login/dev.Dockerfile
    container_name: login
    ports:
      - 6010:80
      - 5010:443
    volumes:
      - ~/.aspnet/https:/https:ro
    environment:
      - ASPNETCORE_ENVIRONMENT=docker
      - ASPNETCORE_URLS=https://+;http://+
      - ASPNETCORE_HTTPS_PORT=5010
      - ASPNETCORE_HTTP_PORT=6010
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx

  offer_command:
    image: offer_command
    build:
      args:
        Version: "1"
      context: ../
      dockerfile: Services/OfferCommand/dev.Dockerfile
    container_name: offer_command
    ports:
      - 6010:80
      - 5010:443
    volumes:
      - ~/.aspnet/https:/https:ro
    environment:
      - ASPNETCORE_ENVIRONMENT=docker
      - ASPNETCORE_URLS=https://+;http://+
      - ASPNETCORE_HTTPS_PORT=5010
      - ASPNETCORE_HTTP_PORT=6010
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx

  offer_query:
    image: offer_query
    build:
      args:
        Version: "1"
      context: ../
      dockerfile: Services/OfferQuery/dev.Dockerfile
    container_name: offer_query
    ports:
      - 6010:80
      - 5010:443
    volumes:
      - ~/.aspnet/https:/https:ro
    environment:
      - ASPNETCORE_ENVIRONMENT=docker
      - ASPNETCORE_URLS=https://+;http://+
      - ASPNETCORE_HTTPS_PORT=5010
      - ASPNETCORE_HTTP_PORT=6010
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx

  payment:
    image: payment
    build:
      args:
        Version: "1"
      context: ../
      dockerfile: Services/Payment/dev.Dockerfile
    container_name: payment
    ports:
      - 6010:80
      - 5010:443
    volumes:
      - ~/.aspnet/https:/https:ro
    environment:
      - ASPNETCORE_ENVIRONMENT=docker
      - ASPNETCORE_URLS=https://+;http://+
      - ASPNETCORE_HTTPS_PORT=5010
      - ASPNETCORE_HTTP_PORT=6010
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx

  transport_command:
    image: transport_command
    build:
      args:
        Version: "1"
      context: ../
      dockerfile: Services/TransportCommand/dev.Dockerfile
    container_name: transport_command
    ports:
      - 6010:80
      - 5010:443
    volumes:
      - ~/.aspnet/https:/https:ro
    environment:
      - ASPNETCORE_ENVIRONMENT=docker
      - ASPNETCORE_URLS=https://+;http://+
      - ASPNETCORE_HTTPS_PORT=5010
      - ASPNETCORE_HTTP_PORT=6010
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx

  transport_query:
    image: transport_query
    build:
      args:
        Version: "1"
      context: ../
      dockerfile: Services/TransportQuery/dev.Dockerfile
    container_name: transport_query
    ports:
      - 6010:80
      - 5010:443
    volumes:
      - ~/.aspnet/https:/https:ro
    environment:
      - ASPNETCORE_ENVIRONMENT=docker
      - ASPNETCORE_URLS=https://+;http://+
      - ASPNETCORE_HTTPS_PORT=5010
      - ASPNETCORE_HTTP_PORT=6010
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx

  trip:
    image: trip
    build:
      args:
        Version: "1"
      context: ../
      dockerfile: Services/Trip/dev.Dockerfile
    container_name: trip
    ports:
      - 6010:80
      - 5010:443
    volumes:
      - ~/.aspnet/https:/https:ro
    environment:
      - ASPNETCORE_ENVIRONMENT=docker
      - ASPNETCORE_URLS=https://+;http://+
      - ASPNETCORE_HTTPS_PORT=5010
      - ASPNETCORE_HTTP_PORT=6010
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
 
  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: local_database
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: your_email@example.com
      PGADMIN_DEFAULT_PASSWORD: your_pgadmin_password
    ports:
      - "5050:80"

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false

volumes:
  postgres_data: